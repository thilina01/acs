services:
  auth-service:
    build: ./auth-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - acs-network
    depends_on:
      - postgres
      - redis


  report-service:
    build: ./report-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - acs-network


  user-service:
    build: ./user-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - acs-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - acs-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:15
    container_name: acs-postgres
    environment:
      POSTGRES_DB: acsdb
      POSTGRES_USER: acsuser
      POSTGRES_PASSWORD: acspass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - acs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U acsuser -d acsdb"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  acs-network:
    driver: bridge
