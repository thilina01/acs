//
//docker exec -it acs-postgres psql -U acsuser -d acsdb -c "UPDATE users SET password = '\$2a\$10\$EtfgyS7EF3cUhaZ9Y3vicumMpMGeb7Q26pGsB3P3d1aaDVCKNV3BK' WHERE username = 'admin';"

//
//docker exec -it acs-postgres psql -U acsuser -d acsdb -c "UPDATE users SET active = true WHERE username = 'admin';"

//docker exec -it acs-postgres psql -U acsuser -d acsdb -c "UPDATE users SET mobile = '+94776667121' WHERE username = 'admin';"

//
//docker exec -it acs-postgres psql -U acsuser -d acsdb -c "SELECT username, mobile FROM users WHERE username = 'admin';"

//
//docker exec -it acs-postgres psql -U acsuser -d acsdb -c "SELECT username, mobile FROM users;"


//
http POST :8081/auth/login username=admin password=admin123
//
http POST :80/auth/login username=admin password=admin123

//
export ADMIN_TOKEN=$(http POST :8081/auth/login username=admin password=admin123 | jq -r .token)

// Decode JWT token
echo $ADMIN_TOKEN | cut -d '.' -f2 | base64 -d | jq

//
http :8083/report/generateReport "Authorization:Bearer $ADMIN_TOKEN"

//
http :8083/report/whoami "Authorization:Bearer $ADMIN_TOKEN"


// Grant permission
http POST :8081/auth/permissions/grant permission=GENERATE_REPORT "Authorization:Bearer $ADMIN_TOKEN"

// Grant permission to another user
http POST :8081/auth/permissions/grant permission=GENERATE_REPORT targetUser=alice "Authorization:Bearer $ADMIN_TOKEN"


// List permissions
http :8081/auth/permissions/list "Authorization:Bearer $ADMIN_TOKEN"

// 
export ADMIN_TOKEN=$(http POST :8081/auth/login username=admin password=admin123 | jq -r .token)

// Decode JWT token
echo $ADMIN_TOKEN | cut -d '.' -f2 | base64 -d | jq

//
http POST :8081/auth/permissions/grant permission=GENERATE_REPORT targetUser=alice "Authorization:Bearer $ADMIN_TOKEN"

//
http POST :8081/auth/permissions/db/grant username=alice permission=GENERATE_REPORT  "Authorization:Bearer $ADMIN_TOKEN"

//
http GET :8081/auth/permissions/db/list username==alice  "Authorization:Bearer $ADMIN_TOKEN"

//
http :8081/auth/permissions/redis/list username==alice "Authorization:Bearer $ADMIN_TOKEN"

//
http :8081/auth/permissions/redis/self "Authorization:Bearer $ADMIN_TOKEN"


// Check whoami (any authenticated user)
http :8082/users/whoami "Authorization:Bearer $ADMIN_TOKEN"

// Get all users (admin-only)
http :8082/users/ "Authorization:Bearer $ADMIN_TOKEN"

// Get single user
http :8082/users/1 "Authorization:Bearer $ADMIN_TOKEN"

// Update user (admin or self)
http PUT :8082/users/1 fullName="New Name" "Authorization:Bearer $ADMIN_TOKEN"

// Create user (admin only) -> moved to auth/register
// http POST :8082/users/ username=john2 fullName="John D2" email=john2@example.com role=USER department=sales "Authorization:Bearer $ADMIN_TOKEN"

// Delete user (admin only)
http DELETE :8082/users/7 "Authorization:Bearer $ADMIN_TOKEN"

//
http POST :8081/auth/register username=emma password=password123 email=emma@abc.com fullName="Emma Doe" department=sales role=USER

//
http POST :8081/auth/admin/activate/alice "Authorization:Bearer $ADMIN_TOKEN"

//
http POST :8081/auth/admin/deactivate/emma "Authorization:Bearer $ADMIN_TOKEN"

//
http POST :8081/auth/login username=emma password=password123

//
docker exec -it acs-postgres psql -U acsuser -d acsdb -c "ALTER TABLE users ADD COLUMN mobile_verified BOOLEAN DEFAULT FALSE NOT NULL;"

//
http POST :8081/auth/verify-mobile/send "Authorization:Bearer $ADMIN_TOKEN"

// 
http POST :8081/auth/verify-mobile/confirm otp=672420 "Authorization:Bearer $ADMIN_TOKEN"
